--------------------------------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\Nathan\Downloads\inpresrepli\log/tableA1.log
  log type:  text
 opened on:  24 Sep 2022, 16:54:38

. *use supa2,clear;
. use inpresdata, clear;

. *EDUCATION;
. anova yeduc birthpl p504th p504th*ch71 nin*p504th, reg cont(nin ch71) ;

      Source |       SS           df       MS      Number of obs   =   152,989
-------------+----------------------------------   F(355, 152633)  =    101.05
       Model |  497488.051       355  1401.37479   Prob > F        =    0.0000
    Residual |  2116793.81   152,633    13.86852   R-squared       =    0.1903
-------------+----------------------------------   Adj R-squared   =    0.1884
       Total |  2614281.87   152,988  17.0881498   Root MSE        =     3.724

------------------------------------------------------------------------------
       yeduc   Coefficient  Std. err.      t    P>|t|     [95% conf. interval]
------------------------------------------------------------------------------
_cons            7.028424   .4608631    15.25   0.000     6.125142    7.931707
birthpl
           1    -.5273669   .4842375    -1.09   0.276    -1.476463    .4217288
           2    -.3835634   .4939273    -0.78   0.437    -1.351651    .5845241
           3     -.380559   .4927721    -0.77   0.440    -1.346382    .5852643
           4    -.0958743   .4968433    -0.19   0.847    -1.069677    .8779284
           5    -.8009646   .4879807    -1.64   0.101    -1.757397    .1554676
           6     .2949542    .490054     0.60   0.547    -.6655416     1.25545
           7     .5697156   .4842983     1.18   0.239    -.3794991     1.51893
           8     .1676342   .4823345     0.35   0.728    -.7777316       1.113
           9     2.730793   .5040692     5.42   0.000     1.742828    3.718759
          10     .7333574   .5474576     1.34   0.180    -.3396484    1.806363
          11    -1.863348   .4844554    -3.85   0.000     -2.81287   -.9138251
          12     .6835121   .4809445     1.42   0.155    -.2591292    1.626153
          13    -.9901301   .5197759    -1.90   0.057     -2.00888      .02862
          14     2.354472    .478711     4.92   0.000     1.416208    3.292736
          15    -.5840045   .4901439    -1.19   0.233    -1.544676    .3766675
          16    -.4383685   .4841363    -0.91   0.365    -1.387266    .5105288
          17     .7194189   .4822117     1.49   0.136    -.2257062    1.664544
          18      .873572   .4943634     1.77   0.077    -.0953703    1.842514
          19     1.080233   .4948079     2.18   0.029       .11042    2.050047
          20     .4508091   .5094411     0.88   0.376     -.547685    1.449303
          21    -.0909083   .4847313    -0.19   0.851    -1.040972    .8591552
          22     1.328845   .5068216     2.62   0.009     .3354854    2.322205
          23     .2532744   .5099528     0.50   0.619    -.7462226    1.252771
          24     2.104148   .4850127     4.34   0.000     1.153533    3.054763
          25      .258418   .5446648     0.47   0.635    -.8091138     1.32595
          26     2.925709   .4726119     6.19   0.000       1.9994    3.852019
          27     .9498756   .5094477     1.86   0.062    -.0486314    1.948383
          28    -.1446913   .4877685    -0.30   0.767    -1.100708     .811325
          29     -.595798   .4863889    -1.22   0.221     -1.54911    .3575143
          30    -1.560807   .5063549    -3.08   0.002    -2.553252   -.5683615
          31     .5690654   .4871837     1.17   0.243    -.3858047    1.523936
          32      .005822   .4821794     0.01   0.990    -.9392398    .9508838
          33      .364998   .4872697     0.75   0.454    -.5900405    1.320037
          34    -.3641525   .4902629    -0.74   0.458    -1.325058    .5967527
          35    -.6072145   .4972422    -1.22   0.222    -1.581799      .36737
          36     2.124642   .4757017     4.47   0.000     1.192277    3.057008
          37     .5254494   .5381477     0.98   0.329    -.5293091    1.580208
          38     .8927513   .5254995     1.70   0.089     -.137217     1.92272
          39     1.615129    .522925     3.09   0.002     .5902062    2.640051
          40     2.393357   .4969011     4.82   0.000     1.419441    3.367273
          41     .2689361   .5034122     0.53   0.593    -.7177415    1.255614
          42    -.4160823   .4967879    -0.84   0.402    -1.389777    .5576119
          43    -.8760591   .4878993    -1.80   0.073    -1.832332    .0802135
          44    -.9135344   .4771271    -1.91   0.056    -1.848694    .0216249
          45    -.2714601   .4923193    -0.55   0.581    -1.236396    .6934756
          46     .0307111   .4840909     0.06   0.949    -.9180972    .9795194
          47      2.88835   .5089341     5.68   0.000      1.89085     3.88585
          48    -2.010751   .5562903    -3.61   0.000    -3.101069   -.9204339
          49     -.109648   .4887879    -0.22   0.823    -1.067662    .8483662
          50    -1.419772   .5065224    -2.80   0.005    -2.412545   -.4269984
          51    -.6404034   .5091249    -1.26   0.208    -1.638278    .3574709
          52    -1.838481    .495125    -3.71   0.000    -2.808916   -.8680465
          53    -1.867017   .5121557    -3.65   0.000    -2.870831   -.8632019
          54     1.477068   .5025584     2.94   0.003     .4920636    2.462072
          55    -.7553652   .4898296    -1.54   0.123    -1.715421    .2046909
          56    -1.132403     .48518    -2.33   0.020    -2.083346   -.1814604
          57     -.979515   .4882357    -2.01   0.045    -1.936447   -.0225831
          58    -.2194695   .4864623    -0.45   0.652    -1.172926    .7339867
          59    -.9543727   .4970089    -1.92   0.055      -1.9285    .0197546
          60    -1.039539   .4888184    -2.13   0.033    -1.997614   -.0814654
          61     -.601567   .4841834    -1.24   0.214    -1.550557    .3474225
          62     -1.01138   .4932127    -2.05   0.040    -1.978067   -.0446931
          63     1.944045   .4816869     4.04   0.000     .9999482    2.888141
          64     .5364366   .5044542     1.06   0.288    -.4522833    1.525156
          65    -.0051974   .4896087    -0.01   0.992    -.9648204    .9544256
          66    -.3813196   .4920998    -0.77   0.438    -1.345825    .5831859
          67    -2.703077   .5232811    -5.17   0.000    -3.728697   -1.677457
          68     1.778356   .5560301     3.20   0.001     .6885488    2.868164
          69    -.6542167   .5012041    -1.31   0.192    -1.636567    .3281332
          70    -.6806133    .497985    -1.37   0.172    -1.656654    .2954271
          71     -.561138   .5023728    -1.12   0.264    -1.545778    .4235023
          72    -.4115059    .544909    -0.76   0.450    -1.479516    .6565044
          73     .9219573   .4960208     1.86   0.063    -.0502333    1.894148
          74     2.938973   .4771031     6.16   0.000      2.00386    3.874085
          75     2.337333   .4722598     4.95   0.000     1.411713    3.262952
          76     3.258667   .4815822     6.77   0.000     2.314776    4.202558
          77     1.846973   .4715708     3.92   0.000     .9227038    2.771242
          78      1.78302   .4760492     3.75   0.000     .8499735    2.716067
          79     -1.94016   .4844736    -4.00   0.000    -2.889718   -.9906016
          80    -2.113033   .4890896    -4.32   0.000    -3.071638   -1.154427
          81    -.3859583    .510902    -0.76   0.450    -1.387316    .6153992
          82    -1.153178   .4945343    -2.33   0.020    -2.122456   -.1839013
          83    -1.146693    .492867    -2.33   0.020    -2.112702   -.1806836
          84     .5103662   .5218146     0.98   0.328    -.5123796    1.533112
          85    -.4058373   .4917862    -0.83   0.409    -1.369728    .5580536
          86    -.2233449   .4946321    -0.45   0.652    -1.192814    .7461238
          87    -.3590031   .4905279    -0.73   0.464    -1.320428    .6024216
          88    -.4702102   .4840064    -0.97   0.331    -1.418853    .4784323
          89    -.9947311   .4832108    -2.06   0.040    -1.941814   -.0476478
          90    -1.104693   .4844417    -2.28   0.023    -2.054188   -.1551967
          91    -.5717123   .4847152    -1.18   0.238    -1.521744    .3783196
          92    -2.982726   .4877762    -6.11   0.000    -3.938758   -2.026695
          93    -1.807533   .4849028    -3.73   0.000    -2.757933   -.8571337
          94    -1.164935   .4942248    -2.36   0.018    -2.133605   -.1962644
          95    -2.244038   .4863201    -4.61   0.000    -3.197216   -1.290861
          96     -2.18712   .4920167    -4.45   0.000    -3.151463   -1.222777
          97    -2.107059   .4933931    -4.27   0.000    -3.074099   -1.140018
          98    -1.263785   .4812044    -2.63   0.009    -2.206936   -.3206343
          99     1.806876    .491702     3.67   0.000     .8431507    2.770602
          100    1.336942   .4958076     2.70   0.007     .3651695    2.308715
          101     3.25028   .4907098     6.62   0.000     2.288499    4.212061
          102    .2617899   .4923594     0.53   0.595    -.7032243    1.226804
          103    .4795248   .5349906     0.90   0.370    -.5690459    1.528095
          104    -.981733   .4908493    -2.00   0.045    -1.943788   -.0196783
          105   -.5549219    .483646    -1.15   0.251    -1.502858    .3930143
          106   -1.363051   .4847892    -2.81   0.005    -2.313228   -.4128741
          107   -1.826371   .4872854    -3.75   0.000    -2.781441   -.8713018
          108   -.4990465   .4829024    -1.03   0.301    -1.445525    .4474324
          109    .4364995    .479523     0.91   0.363    -.5033558    1.376355
          110   -2.037861    .485486    -4.20   0.000    -2.989403   -1.086318
          111     .165062   .4827163     0.34   0.732    -.7810521    1.111176
          112   -.1360949   .4819353    -0.28   0.778    -1.080678    .8084884
          113    1.159722   .4837822     2.40   0.017     .2115184    2.107925
          114    .1868212   .4877117     0.38   0.702    -.7690837    1.142726
          115   -.4215095   .4803762    -0.88   0.380    -1.363037    .5200182
          116   -.5748733   .4855329    -1.18   0.236    -1.526508    .3767613
          117   -.8629472   .4816842    -1.79   0.073    -1.807038    .0811439
          118   -1.276089   .4866002    -2.62   0.009    -2.229815   -.3223623
          119   -1.913906   .4846382    -3.95   0.000    -2.863787   -.9640255
          120   -1.522609   .4886981    -3.12   0.002    -2.480447   -.5647708
          121   -1.258377   .4827334    -2.61   0.009    -2.204524   -.3122292
          122   -.4830197   .4853112    -1.00   0.320     -1.43422    .4681804
          123   -1.413548   .4847015    -2.92   0.004    -2.363553   -.4635426
          124   -1.313022   .4860843    -2.70   0.007    -2.265737   -.3603065
          125   -.1305685   .4820635    -0.27   0.787    -1.075403    .8142661
          126   -1.356229    .486828    -2.79   0.005    -2.310402   -.4020565
          127    -1.87255   .4846959    -3.86   0.000    -2.822544    -.922556
          128   -2.699225   .4878055    -5.53   0.000    -3.655313   -1.743136
          129   -1.553567   .4812535    -3.23   0.001    -2.496813   -.6103197
          130   -1.588888   .4833323    -3.29   0.001     -2.53621    -.641567
          131   -1.484972   .4816277    -3.08   0.002    -2.428952   -.5409911
          132   -1.726171     .48578    -3.55   0.000     -2.67829   -.7740523
          133    1.658144   .4891424     3.39   0.001     .6994352    2.616853
          134    2.141321   .4806177     4.46   0.000     1.199321    3.083322
          135    1.479823   .4942407     2.99   0.003     .5111215    2.448525
          136    1.674466   .4791856     3.49   0.000     .7352718     2.61366
          137   -.4369145   .4933413    -0.89   0.376    -1.403853    .5300243
          138   -.6579045   .4870311    -1.35   0.177    -1.612476    .2966665
          139    .1295914   .4912347     0.26   0.792    -.8332186    1.092401
          140    .4558788   .4842264     0.94   0.346    -.4931951    1.404953
          141   -.7092879   .4867159    -1.46   0.145    -1.663241    .2446653
          142     1.97083   .4887478     4.03   0.000     1.012894    2.928766
          143    3.010227   .4791867     6.28   0.000     2.071031    3.949423
          144   -.7970103    .488258    -1.63   0.103    -1.753986    .1599654
          145   -1.271508   .4826167    -2.63   0.008    -2.217427   -.3255891
          146   -1.121016   .4888649    -2.29   0.022    -2.079181   -.1628507
          147    .0319962   .4836474     0.07   0.947    -.9159427    .9799352
          148   -.7179901   .4873251    -1.47   0.141    -1.673137    .2371571
          149   -.2357113   .4868941    -0.48   0.628    -1.190014    .7185912
          150   -.4881101   .5081798    -0.96   0.337    -1.484132     .507912
          151   -1.704124   .4826187    -3.53   0.000    -2.650047   -.7582015
          152    -1.65394   .5019439    -3.30   0.001     -2.63774   -.6701407
          153   -.5419156   .4906046    -1.10   0.269    -1.503491    .4196594
          154   -3.199434   .4914804    -6.51   0.000    -4.162725   -2.236142
          155   -2.678491   .4925089    -5.44   0.000    -3.643798   -1.713183
          156   -2.959572   .4833511    -6.12   0.000     -3.90693   -2.012213
          157   -2.261959   .4869433    -4.65   0.000    -3.216358    -1.30756
          158    .5696677    .487929     1.17   0.243    -.3866631    1.525999
          159   -.7707093   .4844264    -1.59   0.112    -1.720175    .1787565
          160   -.2716588   .4829875    -0.56   0.574    -1.218304    .6749868
          161   -.6107553   .4822125    -1.27   0.205    -1.555882    .3343713
          162   -.0622469   .4833695    -0.13   0.898    -1.009641    .8851474
          163   -.2639134    .488688    -0.54   0.589    -1.221732    .6939051
          164   -1.730692   .4867894    -3.56   0.000    -2.684789   -.7765945
          165   -1.506086   .4832033    -3.12   0.002    -2.453155   -.5590178
          166   -2.685448   .4872969    -5.51   0.000     -3.64054   -1.730356
          167   -.8460356    .482637    -1.75   0.080    -1.791994    .0999231
          168   -.4214535   .4892227    -0.86   0.389     -1.38032    .5374129
          169   -3.059607   .4833626    -6.33   0.000    -4.006987   -2.112226
          170   -4.963029   .4866213   -10.20   0.000    -5.916797   -4.009262
          171   -2.238592   .4913757    -4.56   0.000    -3.201678   -1.275506
          172   -2.709118   .4888069    -5.54   0.000    -3.667169   -1.751066
          173    1.329413   .4955246     2.68   0.007     .3581946    2.300631
          174    .5890271   .4987885     1.18   0.238    -.3885882    1.566642
          175    1.236361   .4966711     2.49   0.013     .2628959    2.209826
          176   -.2964675   .5029494    -0.59   0.556    -1.282238     .689303
          177   -.2219654   .5078102    -0.44   0.662    -1.217263    .7733321
          178    1.186282   .5052371     2.35   0.019     .1960278    2.176536
          179    1.975731   .5072596     3.89   0.000     .9815127     2.96995
          180     3.01311    .493411     6.11   0.000     2.046035    3.980186
          181   -1.308765   .5159208    -2.54   0.011     -2.31996   -.2975711
          182    .8542788   .4830331     1.77   0.077    -.0924561    1.801014
          183    .5650945   .4861968     1.16   0.245    -.3878412     1.51803
          184     .388117   .4847203     0.80   0.423    -.5619249    1.338159
          185    -1.36985   .4885248    -2.80   0.005    -2.327348    -.412351
          186   -1.707657   .4897473    -3.49   0.000    -2.667552   -.7477623
          187   -2.152857   .4869427    -4.42   0.000    -3.107254   -1.198459
          188   -.7019609   .4976735    -1.41   0.158    -1.677391    .2734689
          189    1.492284   .5211647     2.86   0.004     .4708119    2.513756
          190   -2.750492   .4900544    -5.61   0.000    -3.710988   -1.789995
          191   -2.301802   .4904043    -4.69   0.000    -3.262985    -1.34062
          192   -1.777598   .4861887    -3.66   0.000    -2.730518   -.8246785
          193   -.9947819   .4978572    -2.00   0.046    -1.970572    -.018992
          194   -.7095111   .5117136    -1.39   0.166    -1.712459    .2934371
          195     .105285   .4855905     0.22   0.828    -.8464624    1.057032
          196   -.2227358   .5048189    -0.44   0.659    -1.212171    .7666989
          197    -2.86276   .4867075    -5.88   0.000    -3.816697   -1.908823
          198   -2.507194   .4915096    -5.10   0.000    -3.470543   -1.543845
          199   -.7681771   .4912983    -1.56   0.118    -1.731112    .1947575
          200   -2.176748   .4903718    -4.44   0.000    -3.137867   -1.215629
          201    -2.03619   .4957941    -4.11   0.000    -3.007936   -1.064444
          202   -1.935936   .4884987    -3.96   0.000    -2.893383   -.9784887
          203   -.4084559   .4935453    -0.83   0.408    -1.375795    .5588827
          204    .5048295    .496324     1.02   0.309    -.4679555    1.477614
          205   -2.800092   .4940318    -5.67   0.000    -3.768384     -1.8318
          206   -.5320927    .495674    -1.07   0.283    -1.503604    .4394182
          207   -.9963486   .4905292    -2.03   0.042    -1.957776   -.0349214
          208   -1.137754   .4865524    -2.34   0.019    -2.091387   -.1841213
          209   -1.729332   .4858846    -3.56   0.000    -2.681655   -.7770076
          210   -1.712036   .4845342    -3.53   0.000    -2.661713    -.762359
          211     -2.3367   .4935658    -4.73   0.000    -3.304079   -1.369321
          212   -2.828198   .4958535    -5.70   0.000    -3.800061   -1.856335
          213    -2.56167   .4952178    -5.17   0.000    -3.532287   -1.591053
          214   -1.740553   .4971278    -3.50   0.000    -2.714914   -.7661933
          215    .7743686   .4993864     1.55   0.121    -.2044184    1.753156
          216   -1.402792   .5364579    -2.61   0.009    -2.454239    -.351346
          217   -.6636104    .497622    -1.33   0.182    -1.638939    .3117186
          218     .193279   .4926744     0.39   0.695    -.7723528    1.158911
          219    .5145234   .4982453     1.03   0.302    -.4620272    1.491074
          220   -1.043909   .4928695    -2.12   0.034    -2.009924   -.0778954
          221    1.699096   .6122924     2.77   0.006      .499015    2.899176
          222   -2.665872   .5169404    -5.16   0.000    -3.679065    -1.65268
          223   -1.761739   .5114734    -3.44   0.001    -2.764217    -.759262
          224    -1.44364   .4884791    -2.96   0.003    -2.401049   -.4862309
          225   -2.335919   .5113669    -4.57   0.000    -3.338188    -1.33365
          226   -1.412925   .4999092    -2.83   0.005    -2.392737   -.4331135
          227    -1.37889   .4848137    -2.84   0.004    -2.329115    -.428665
          228   -1.112077    .488254    -2.28   0.023    -2.069045   -.1551091
          229   -1.652836   .4831961    -3.42   0.001     -2.59989   -.7057813
          230   -.4443105    .492704    -0.90   0.367        -1.41    .5213792
          231    1.305537   .4849173     2.69   0.007      .355109    2.255965
          232   -2.675075   .5418101    -4.94   0.000    -3.737012   -1.613138
          233   -.0528375   .4984163    -0.11   0.916    -1.029723    .9240483
          234   -2.717889   .5608225    -4.85   0.000     -3.81709   -1.618688
          235   -.8458366   .4906531    -1.72   0.085    -1.807507    .1158334
          236    1.651296   .5103948     3.24   0.001     .6509326    2.651659
          237    2.032606   .5261785     3.86   0.000     1.001306    3.063905
          238   -1.259485   .4819955    -2.61   0.009    -2.204186   -.3147838
          239    -.257745   .4918493    -0.52   0.600     -1.22176    .7062697
          240    1.147689   .4808702     2.39   0.017     .2051934    2.090185
          241   -.4927857    .479201    -1.03   0.304     -1.43201    .4464384
          242   -.0495136   .4920496    -0.10   0.920    -1.013921    .9148936
          243    2.110041   .4941137     4.27   0.000     1.141588    3.078494
          244    .9841546   .5705198     1.73   0.085    -.1340526    2.102362
          245   -.1173793   .5000325    -0.23   0.814    -1.097433    .8626741
          246      .36953   .4889203     0.76   0.450    -.5887438    1.327804
          247   -.5785688   .4797953    -1.21   0.228    -1.518958    .3618202
          248    .1020799    .488285     0.21   0.834    -.8549487    1.059108
          249   -1.146057   .4942856    -2.32   0.020    -2.114847   -.1772674
          250   -.9533874   .4906247    -1.94   0.052    -1.915002     .008227
          251   -3.454178   .4917429    -7.02   0.000    -4.417984   -2.490373
          252   -2.175384   .4901785    -4.44   0.000    -3.136124   -1.214644
          253   -2.420534   .4917902    -4.92   0.000    -3.384433   -1.456635
          254   -2.035103   .4906357    -4.15   0.000    -2.996738   -1.073467
          255   -2.132249   .4883263    -4.37   0.000    -3.089359    -1.17514
          256   -2.638902   .4928962    -5.35   0.000    -3.604969   -1.672836
          257   -1.608526   .4867321    -3.30   0.001    -2.562511   -.6545409
          258   -1.000308    .498746    -2.01   0.045     -1.97784   -.0227764
          259   -1.558578   .4930449    -3.16   0.002    -2.524936   -.5922203
          260   -.4459215   .4891135    -0.91   0.362    -1.404574    .5127309
          261   -2.151738   .4837807    -4.45   0.000    -3.099939   -1.203538
          262   -.6624134   .4899963    -1.35   0.176    -1.622796    .2979694
          263    .1234028   .4977259     0.25   0.804    -.8521297    1.098935
          264    .0309038   .4937454     0.06   0.950    -.9368271    .9986347
          265    .5268777   .4903505     1.07   0.283    -.4341993    1.487955
          266    .3134184   .4857749     0.65   0.519    -.6386904    1.265527
          267   -1.845689   .4862434    -3.80   0.000    -2.798716   -.8926618
          268   -1.078436   .4926244    -2.19   0.029     -2.04397   -.1129026
          269   -1.766478   .5249283    -3.37   0.001    -2.795326   -.7376288
          270    2.295721   .4760716     4.82   0.000      1.36263    3.228811
          271    1.279056   .5056679     2.53   0.011     .2879569    2.270154
          272   -.3865331   .4840101    -0.80   0.425    -1.335183    .5621167
          273   -.4464813   .4979168    -0.90   0.370    -1.422388    .5294256
          274    .3850783   .4979947     0.77   0.439     -.590981    1.361138
          275    -.322367   .5207009    -0.62   0.536     -1.34293    .6981961
          276    .5940819    .485939     1.22   0.222    -.3583485    1.546512
          277   -.1501895   .4891089    -0.31   0.759    -1.108833    .8084539
          278    .1121041   .5478343     0.20   0.838    -.9616399    1.185848
          279   -1.295129   .5561184    -2.33   0.020     -2.38511   -.2051487
          280    2.459552   .4947583     4.97   0.000     1.489836    3.429268
          281   -3.536141   .4923663    -7.18   0.000    -4.501169   -2.571113
          282    -4.79749   .4898977    -9.79   0.000    -5.757679   -3.837301
          283   -1.215688     .48419    -2.51   0.012    -2.164691    -.266686
          284   -4.927478   .4925422   -10.00   0.000    -5.892851   -3.962106
          285   -2.136549   .4908914    -4.35   0.000    -3.098686   -1.174412
          286   -1.741591   .4988353    -3.49   0.000    -2.719298   -.7638837
          287   -3.434713   .4988346    -6.89   0.000    -4.412419   -2.457007
          288   -1.989016   .4852095    -4.10   0.000    -2.940016   -1.038015
          289   -.4221745   .4900983    -0.86   0.389    -1.382757    .5384082
          290   (dropped)
p504th
           1     .9541727   .2382538     4.00   0.000     .4872003    1.421145
           2     .4731775   .2167867     2.18   0.029       .04828    .8980749
           3     .4532549   .2116689     2.14   0.032     .0383882    .8681215
           4     .5261714   .2115505     2.49   0.013     .1115368     .940806
           5     .2651132   .1965573     1.35   0.177    -.1201352    .6503615
           6     .8885669   .2144584     4.14   0.000     .4682328    1.308901
           7     .5734391   .2073797     2.77   0.006     .1669791    .9798991
           8     1.003503   .2011966     4.99   0.000     .6091617    1.397844
           9     1.275665    .203078     6.28   0.000     .8776367    1.673694
          10      .593319   .1878065     3.16   0.002     .2252221    .9614158
          11     1.367351    .218462     6.26   0.000     .9391697    1.795532
          12     1.731912    .204073     8.49   0.000     1.331933    2.131891
          13     1.682672   .1999827     8.41   0.000      1.29071    2.074634
          14     1.760324   .2047201     8.60   0.000     1.359076    2.161571
          15     1.251567   .1870824     6.69   0.000     .8848898    1.618245
          16     2.327073   .2085499    11.16   0.000      1.91832    2.735827
          17     2.076272   .2001322    10.37   0.000     1.684017    2.468527
          18     2.189038   .1958903    11.17   0.000     1.805097    2.572979
          19     2.395813   .1976175    12.12   0.000     2.008486    2.783139
          20     2.060486   .1895727    10.87   0.000     1.688927    2.432045
          21     2.438015   .2025743    12.04   0.000     2.040974    2.835057
          22     2.064412   .1950298    10.59   0.000     1.682158    2.446667
          23    (dropped)
p504th*ch71
        1       -1.39e-06   7.68e-07    -1.80   0.071    -2.89e-06    1.21e-07
        2       -4.30e-07   6.99e-07    -0.62   0.538    -1.80e-06    9.40e-07
        3       -5.69e-07   6.86e-07    -0.83   0.407    -1.91e-06    7.76e-07
        4       -4.88e-08   6.87e-07    -0.07   0.943    -1.40e-06    1.30e-06
        5       -1.24e-06   6.39e-07    -1.95   0.052    -2.50e-06    9.02e-09
        6       -1.12e-06   7.01e-07    -1.60   0.109    -2.50e-06    2.49e-07
        7       -2.02e-07   6.77e-07    -0.30   0.765    -1.53e-06    1.13e-06
        8       -1.77e-06   6.61e-07    -2.67   0.007    -3.06e-06   -4.72e-07
        9       -2.32e-06   6.63e-07    -3.50   0.000    -3.62e-06   -1.02e-06
       10       -9.59e-07   6.09e-07    -1.58   0.115    -2.15e-06    2.34e-07
       11       -1.95e-06   6.98e-07    -2.80   0.005    -3.32e-06   -5.85e-07
       12       -1.72e-06   6.71e-07    -2.57   0.010    -3.04e-06   -4.08e-07
       13       -1.63e-06   6.47e-07    -2.52   0.012    -2.90e-06   -3.61e-07
       14       -1.32e-06   6.62e-07    -1.99   0.047    -2.61e-06   -1.87e-08
       15       -1.52e-07   6.07e-07    -0.25   0.802    -1.34e-06    1.04e-06
       16       -1.45e-06   6.71e-07    -2.16   0.031    -2.77e-06   -1.34e-07
       17       -3.65e-07   6.50e-07    -0.56   0.574    -1.64e-06    9.08e-07
       18       -1.01e-06   6.38e-07    -1.58   0.114    -2.26e-06    2.41e-07
       19       -1.51e-06   6.40e-07    -2.36   0.018    -2.76e-06   -2.54e-07
       20       -1.32e-06   6.11e-07    -2.16   0.031    -2.52e-06   -1.22e-07
       21       -8.38e-07   6.57e-07    -1.28   0.202    -2.13e-06    4.50e-07
       22        1.57e-07   6.40e-07     0.24   0.807    -1.10e-06    1.41e-06
       23       (dropped)
nin*p504th
           1    -.0722826   .0736921    -0.98   0.327    -.2167175    .0721524
           2     .0116921   .0679039     0.17   0.863     -.121398    .1447823
           3     .0666108   .0659693     1.01   0.313    -.0626878    .1959094
           4      .039237   .0655436     0.60   0.549    -.0892271    .1677012
           5     .0479654   .0609573     0.79   0.431    -.0715096    .1674405
           6     .0105932   .0667191     0.16   0.874    -.1201749    .1413613
           7     .0869343   .0649677     1.34   0.181     -.040401    .2142696
           8    -.0211437   .0624368    -0.34   0.735    -.1435185    .1012311
           9    -.0301098   .0629113    -0.48   0.632    -.1534147    .0931951
          10      .080631   .0582624     1.38   0.166    -.0335622    .1948241
          11     .0636377   .0685896     0.93   0.354    -.0707965    .1980719
          12    -.0067301   .0635625    -0.11   0.916    -.1313112     .117851
          13     .0388298   .0624165     0.62   0.534    -.0835052    .1611648
          14     .0869072   .0637216     1.36   0.173    -.0379859    .2118002
          15     .1679803   .0580466     2.89   0.004     .0542102    .2817503
          16     .1162834   .0651051     1.79   0.074    -.0113213    .2438881
          17     .1509648   .0616163     2.45   0.014     .0301982    .2717315
          18     .1650305   .0600378     2.75   0.006     .0473576    .2827034
          19     .1279969   .0608517     2.10   0.035     .0087288    .2472649
          20     .1385108   .0581394     2.38   0.017     .0245588    .2524628
          21     .1364294    .061909     2.20   0.028      .015089    .2577699
          22     .1719646   .0592082     2.90   0.004     .0559177    .2880116
          23    (dropped)
------------------------------------------------------------------------------

. display "N.OBS  " e(N);
N.OBS  152989

. display "R. squared" e(r2);
R. squared.19029626

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  774.018231    22  35.1826469       2.54     0.0001
                Residual |  2116793.81152633    13.86852   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.07228256

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .07369206

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .01169214

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .06790386

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .06661082

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .06596935

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= .03923704

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .06554361

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .04796543

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .06095728

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= .01059318

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .0667191

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .08693432

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .06496766

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= -.02114373

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .06243678

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.0301098

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .06291133

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .08063097

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .05826243

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .0636377

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .06858959

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= -.0067301

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .06356246

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .03882978

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .06241645

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .08690715

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .06372162

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .16798025

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .05804657

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .11628341

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .06510511

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .15096483

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .06161627

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .1650305

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .06003784

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .12799686

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .06085167

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .13851081

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .05813938

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .13642942

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .06190903

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .17196462

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .05920824

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova yeduc birthpl p504th p504th*ch71 p504th*en71 nin*p504th, reg cont(nin ch71 en71) ;

. display "N.OBS  " e(N);
N.OBS  152495

. display "R. squared" e(r2);
R. squared.19085153

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  933.522174    22  42.4328261       3.06     0.0000
                Residual |  2108712.48152119  13.8622557   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.08308636

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .07727852

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= -.00241384

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .07090015

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .05898817

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .06956809

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= .01439343

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .06955955

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .05054626

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .0653014

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= .03240352

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .07023206

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .0675655

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .06888071

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= -.0070209

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .06641091

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.02456848

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .06702783

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .08752361

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .06208846

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .07081904

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .07145953

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .00244729

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .06701286

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .05200057

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .06603935

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .07665024

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .06741486

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .16679964

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .06163362

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .13446359

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .06839518

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .1698674

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .06556679

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .19553735

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .0638133

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .16003224

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .06442826

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .14920155

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .06175458

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .16813107

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .06559112

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .21891863

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .06323438

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova yeduc birthpl p504th p504th*ch71 p504th*en71 p504thn*wsppc nin*p504th, reg cont(nin ch71 en71 wsppc) ;

. display "N.OBS  " e(N);
N.OBS  143107

. display "R. squared" e(r2);
R. squared.16933684

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  1156.40327    22   52.563785       3.76     0.0000
                Residual |  1996747.86142716  13.9910582   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.15433668

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .08639375

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= -.03493416

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .07929806

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .03316819

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .07657559

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= -.03815426

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .07712165

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .03006762

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .07219407

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= -.00298378

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .07694073

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .03100081

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .07566874

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= -.08071582

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .07327699

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.08642732

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .07382431

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .07195796

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .06908183

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .01402037

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .07926838

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= -.00904219

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .07464405

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .00727653

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .07284462

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .06724552

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .07488352

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .1438498

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .06827633

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .10269537

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .074684

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .14746369

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .07264606

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .24375977

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .07126108

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .11731836

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .07202415

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .16201906

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .0693868

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .18866738

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .07409901

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .1818772

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .07101616

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. *EDUCATION, wage sample ;
. quietly anova yeduc birthpl p504th p504th*ch71 nin*p504th if lhwage!=.,
> reg cont(nin ch71) ;

. display "N.OBS  " e(N);
N.OBS  60663

. display "R. squared" e(r2);
R. squared.14306381

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  552.848035    22  25.1294561       1.79     0.0125
                Residual |  844514.139 60307   14.003584   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.03044703

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .131744

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .00933829

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .12591882

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .11258634

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .12186035

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= .01877472

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .12133792

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .13652178

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .12010732

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= -.06356343

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .12281187

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .04117583

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .12030526

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .01261891

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .11632898

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.04729324

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .11518861

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .15501863

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .11202295

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .10915112

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .12656941

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .00225302

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .11579164

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .05128976

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .11316173

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .1436167

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .11452212

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .10987316

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .10841378

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .22934439

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .11660773

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .15212117

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .11250871

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .27185151

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .11126906

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .18048678

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .11437131

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .23594157

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .11042176

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .19089125

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .11707693

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .24175208

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .11320231

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova yeduc birthpl p504th p504th*ch71 p504th*en71 nin*p504th if lhwage!=.,
>  reg cont(nin ch71 en71) ;

. display "N.OBS  " e(N);
N.OBS  60466

. display "R. squared" e(r2);
R. squared.14364221

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  581.576527    22  26.4352967       1.89     0.0071
                Residual |  841217.297 60090  13.9992894   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.0363411

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .13541575

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .00219261

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .12880294

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .12173659

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .1244783

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= .03782085

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .12536578

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .13130904

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .1224917

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= -.0450963

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .12472626

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .05365643

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .12288669

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .03669677

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .11910132

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.05298729

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .11807944

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .16750998

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .11410766

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .13387435

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .12844288

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .04132945

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .11841563

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .0660958

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .11559013

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .14394981

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .11717724

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .11576492

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .11089915

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .25104011

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .11884646

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .18473462

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .1150728

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .28629492

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .11353969

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .2093096

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .11663402

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .24423824

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .11279803

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .22160443

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .11971777

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .26843763

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .11592109

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova yeduc birthpl p504th p504th*ch71 p504th*en71 p504thn*wsppc nin*p504th if lhwage!=.,
>  reg cont(nin ch71 en71 wsppc) ;

. display "N.OBS  " e(N);
N.OBS  55144

. display "R. squared" e(r2);
R. squared.13548674

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  940.269136    22  42.7395062       2.98     0.0000
                Residual |  784548.232 54753  14.3288629   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.01393533

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .15637472

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .11238722

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .14711786

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .1554866

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .14288671

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= -.04224056

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .14255534

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .21893447

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .13863855

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= .01584696

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .14031603

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .15124725

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .13863416

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .07505274

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .13504393

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= .01732326

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .13326568

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .3221473

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .12966303

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .20904116

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .14394423

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .12193201

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .13549539

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .11094618

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .1302259

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .24303751

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .13498731

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .28691308

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .12655963

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .39435575

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .13427107

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .27416816

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .13086402

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .43209362

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .13101328

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .38119037

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .13382224

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .40646456

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .12994811

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .40915268

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .13971955

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .36826353

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .13364562

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. *WAGE;
. quietly anova lhwage birthpl p504th p504th*ch71 nin*p504th, reg cont(nin ch71) ;

. display "N.OBS  " e(N);
N.OBS  60663

. display "R. squared" e(r2);
R. squared.14823105

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  8.36408674    22  .380185761       0.93     0.5549
                Residual |   24664.887 60307  .408988791   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.00695192

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .02251474

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .00235257

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .02151923

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .01675538

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .02082565

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= -.01468124

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .02073637

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .01996395

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .02052606

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= -.00322643

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .02098826

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .00371611

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .02055989

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .00115608

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .01988035

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.01021299

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .01968546

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .01879749

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .01914446

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= -.00566913

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .02163042

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .01869472

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .01978852

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= -.01107579

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .01933907

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .00640515

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .01957156

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .01217318

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .01852766

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .02197279

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .01992799

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= -.00680925

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .01922747

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .01421987

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .01901562

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .02397334

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .01954579

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .02133206

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .01887082

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .01055398

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .02000817

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .01843921

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .01934601

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova lhwage birthpl p504th p504th*ch71 p504th*en71 nin*p504th, reg cont(nin ch71 en71) ;

. display "N.OBS  " e(N);
N.OBS  60466

. display "R. squared" e(r2);
R. squared.14912974

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |  9.24336306    22  .420152867       1.03     0.4235
                Residual |  24554.9749 60090  .408636626   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X= " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.01217051

->  display `"se 1= "' _se[nin*p504th[1]]
se 1= .02313582

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .00393942

->  display `"se 2= "' _se[nin*p504th[2]]
se 2= .02200602

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .01919294

->  display `"se 3= "' _se[nin*p504th[3]]
se 3= .02126715

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= -.00523186

->  display `"se 4= "' _se[nin*p504th[4]]
se 4= .02141878

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .0239837

->  display `"se 5= "' _se[nin*p504th[5]]
se 5= .02092774

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= .00271439

->  display `"se 6= "' _se[nin*p504th[6]]
se 6= .02130951

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .01000671

->  display `"se 7= "' _se[nin*p504th[7]]
se 7= .02099522

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .00430872

->  display `"se 8= "' _se[nin*p504th[8]]
se 8= .02034849

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= -.0091158

->  display `"se 9= "' _se[nin*p504th[9]]
se 9= .0201739

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .02307362

->  display `"se 10= "' _se[nin*p504th[10]]
se 10= .01949532

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .00005404

->  display `"se 11= "' _se[nin*p504th[11]]
se 11= .0219445

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .02493587

->  display `"se 12= "' _se[nin*p504th[12]]
se 12= .02023134

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= -.00673985

->  display `"se 13= "' _se[nin*p504th[13]]
se 13= .0197486

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .0106364

->  display `"se 14= "' _se[nin*p504th[14]]
se 14= .02001976

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .01613454

->  display `"se 15= "' _se[nin*p504th[15]]
se 15= .01894715

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .02682155

->  display `"se 16= "' _se[nin*p504th[16]]
se 16= .02030495

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .00130056

->  display `"se 17= "' _se[nin*p504th[17]]
se 17= .01966022

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .01973192

->  display `"se 18= "' _se[nin*p504th[18]]
se 18= .01939829

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .02899335

->  display `"se 19= "' _se[nin*p504th[19]]
se 19= .01992695

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .02656715

->  display `"se 20= "' _se[nin*p504th[20]]
se 20= .01927157

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .01903838

->  display `"se 21= "' _se[nin*p504th[21]]
se 21= .02045381

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .02934645

->  display `"se 22= "' _se[nin*p504th[22]]
se 22= .01980515

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23= "' _se[nin*p504th[23]]
se 23= 0

. quietly anova lhwage birthpl p504th p504th*ch71 p504th*en71 p504thn*wsppc nin*p504th, reg cont(nin ch71 en71 wsppc) ;

. display "N.OBS  " e(N);
N.OBS  55144

. display "R. squared" e(r2);
R. squared.14239261

. test nin*p504th;

                  Source |  Partial SS    df       MS           F     Prob > F
              -----------+----------------------------------------------------
              nin*p504th |   20.087361    22  .913061864       2.22     0.0008
                Residual |  22529.7973 54753  .411480599   

. for X in num 1/23:
> display "coeff X= " _b[nin*p504th[X]]\
> display "se X = " _se[nin*p504th[X]];

->  display `"coeff 1= "' _b[nin*p504th[1]]
coeff 1= -.01335895

->  display `"se 1 = "' _se[nin*p504th[1]]
se 1 = .02649936

->  display `"coeff 2= "' _b[nin*p504th[2]]
coeff 2= .0126556

->  display `"se 2 = "' _se[nin*p504th[2]]
se 2 = .02493069

->  display `"coeff 3= "' _b[nin*p504th[3]]
coeff 3= .02735326

->  display `"se 3 = "' _se[nin*p504th[3]]
se 3 = .02421367

->  display `"coeff 4= "' _b[nin*p504th[4]]
coeff 4= -.02004883

->  display `"se 4 = "' _se[nin*p504th[4]]
se 4 = .02415752

->  display `"coeff 5= "' _b[nin*p504th[5]]
coeff 5= .04460057

->  display `"se 5 = "' _se[nin*p504th[5]]
se 5 = .02349378

->  display `"coeff 6= "' _b[nin*p504th[6]]
coeff 6= .02218832

->  display `"se 6 = "' _se[nin*p504th[6]]
se 6 = .02377804

->  display `"coeff 7= "' _b[nin*p504th[7]]
coeff 7= .02317732

->  display `"se 7 = "' _se[nin*p504th[7]]
se 7 = .02349303

->  display `"coeff 8= "' _b[nin*p504th[8]]
coeff 8= .01549946

->  display `"se 8 = "' _se[nin*p504th[8]]
se 8 = .02288463

->  display `"coeff 9= "' _b[nin*p504th[9]]
coeff 9= .00467385

->  display `"se 9 = "' _se[nin*p504th[9]]
se 9 = .02258329

->  display `"coeff 10= "' _b[nin*p504th[10]]
coeff 10= .05207182

->  display `"se 10 = "' _se[nin*p504th[10]]
se 10 = .02197278

->  display `"coeff 11= "' _b[nin*p504th[11]]
coeff 11= .01558732

->  display `"se 11 = "' _se[nin*p504th[11]]
se 11 = .02439288

->  display `"coeff 12= "' _b[nin*p504th[12]]
coeff 12= .04510825

->  display `"se 12 = "' _se[nin*p504th[12]]
se 12 = .02296113

->  display `"coeff 13= "' _b[nin*p504th[13]]
coeff 13= .00946214

->  display `"se 13 = "' _se[nin*p504th[13]]
se 13 = .02206816

->  display `"coeff 14= "' _b[nin*p504th[14]]
coeff 14= .0239813

->  display `"se 14 = "' _se[nin*p504th[14]]
se 14 = .02287503

->  display `"coeff 15= "' _b[nin*p504th[15]]
coeff 15= .03631249

->  display `"se 15 = "' _se[nin*p504th[15]]
se 15 = .02144688

->  display `"coeff 16= "' _b[nin*p504th[16]]
coeff 16= .0447703

->  display `"se 16 = "' _se[nin*p504th[16]]
se 16 = .02275366

->  display `"coeff 17= "' _b[nin*p504th[17]]
coeff 17= .02471576

->  display `"se 17 = "' _se[nin*p504th[17]]
se 17 = .0221763

->  display `"coeff 18= "' _b[nin*p504th[18]]
coeff 18= .0362864

->  display `"se 18 = "' _se[nin*p504th[18]]
se 18 = .02220159

->  display `"coeff 19= "' _b[nin*p504th[19]]
coeff 19= .06971885

->  display `"se 19 = "' _se[nin*p504th[19]]
se 19 = .0226776

->  display `"coeff 20= "' _b[nin*p504th[20]]
coeff 20= .05575081

->  display `"se 20 = "' _se[nin*p504th[20]]
se 20 = .02202109

->  display `"coeff 21= "' _b[nin*p504th[21]]
coeff 21= .04532394

->  display `"se 21 = "' _se[nin*p504th[21]]
se 21 = .02367696

->  display `"coeff 22= "' _b[nin*p504th[22]]
coeff 22= .05796455

->  display `"se 22 = "' _se[nin*p504th[22]]
se 22 = .02264767

->  display `"coeff 23= "' _b[nin*p504th[23]]
coeff 23= 0

->  display `"se 23 = "' _se[nin*p504th[23]]
se 23 = 0

. 
end of do-file

. do susenas.do;

. # delimit ;
delimiter now ;
. version 10;

. use esther2,clear;

. keep inccat avinc;

. sort inccat;

. save esther2, replace;
file esther2.dta saved

. *use supa2;
. use inpresdata, clear;

. cap drop _merge;

. gen codag=99;

. replace codag=11 if p607==11;
(34,940 real changes made)

. replace codag=13 if p607==13;
(2,024 real changes made)

. replace codag=99 if p607==14;
(0 real changes made)

. replace codag=15 if p607==15;
(1,666 real changes made)

. replace codag=16 if p607==16;
(382 real changes made)

. replace codag=16 if (p607==17 |p607==18);
(4,539 real changes made)

. gen indcode=int(p607/10);
(10,426 missing values generated)

. replace indcode=10 if indcode==0;
(0 real changes made)

. replace indcode=6 if p607==14;
(1,004 real changes made)

. gen status=1 if p608==4;
(91,854 missing values generated)

. replace status=2 if p608!=.4;
(152,990 real changes made)

. gen ysrccode=status+indcode*10;
(10,426 missing values generated)

. gen inccat=p105+codag*10+ysrccode*1000;
(10,426 missing values generated)

. sort inccat;

. merge inccat using esther2;
variable inccat does not uniquely identify observations in the master data

. sum avinc [w=weight] if lwage!=.;
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       avinc |  58,895    12925908    204719.6    87945.7    69783.2   504360.9

. sum avinc  [w=weight] if lwage ==.;
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
       avinc |  73,272    15205081    151962.5   73762.19    69783.2   504360.9

. scalar define savinc=r(mean);

. sum wage  [w=weight];
(analytic weights assumed)

    Variable |     Obs      Weight        Mean   Std. dev.       Min        Max
-------------+-----------------------------------------------------------------
        wage |  61,136    13488847    213295.7     187419      10000   1.04e+07

. scalar define swage=r(mean);

. scalar define infla=swage/savinc;

. gen winp=avinc*infla;
(20,823 missing values generated)

. gen lwinp=log(winp);
(20,825 missing values generated)

. replace lwinp=lwage if lwage !=.;
(61,136 real changes made)

. keep if lwinp !=.;
(18,584 observations deleted)

. keep birthpl ch71 en71 nin wsppc lwinp yeduc dum p504thn;

. tab birthpl, gen(ROB);

   province |
        and |
  kabupaten |
of birth (4 |
    digits) |      Freq.     Percent        Cum.
------------+-----------------------------------
       1101 |        470        0.35        0.35
       1102 |        328        0.24        0.59
       1103 |        344        0.26        0.85
       1104 |        143        0.11        0.96
       1105 |        427        0.32        1.27
       1106 |        384        0.29        1.56
       1107 |        450        0.33        1.89
       1108 |        526        0.39        2.29
       1171 |        265        0.20        2.48
       1172 |        147        0.11        2.59
       1201 |        319        0.24        2.83
       1202 |        585        0.44        3.26
       1203 |        238        0.18        3.44
       1204 |        726        0.54        3.98
       1205 |        366        0.27        4.25
       1206 |        563        0.42        4.67
       1207 |        647        0.48        5.15
       1208 |        297        0.22        5.38
       1209 |        347        0.26        5.63
       1210 |        660        0.49        6.12
       1211 |        475        0.35        6.48
       1271 |        288        0.21        6.69
       1272 |        239        0.18        6.87
       1273 |        430        0.32        7.19
       1274 |        300        0.22        7.41
       1275 |      1,202        0.89        8.31
       1276 |        300        0.22        8.53
       1301 |        432        0.32        8.85
       1302 |        459        0.34        9.19
       1303 |        178        0.13        9.33
       1304 |        454        0.34        9.66
       1305 |        621        0.46       10.13
       1306 |        473        0.35       10.48
       1307 |        401        0.30       10.78
       1308 |        329        0.24       11.02
       1371 |        811        0.60       11.62
       1372 |        153        0.11       11.74
       1373 |        186        0.14       11.88
       1374 |        187        0.14       12.02
       1375 |        356        0.26       12.28
       1376 |        303        0.23       12.51
       1401 |        336        0.25       12.76
       1402 |        423        0.31       13.07
       1403 |        578        0.43       13.50
       1404 |        262        0.19       13.70
       1405 |        459        0.34       14.04
       1471 |        228        0.17       14.21
       1472 |        129        0.10       14.30
       1501 |        282        0.21       14.51
       1502 |        140        0.10       14.62
       1503 |        160        0.12       14.74
       1504 |        255        0.19       14.93
       1505 |        136        0.10       15.03
       1571 |        273        0.20       15.23
       1601 |        364        0.27       15.50
       1602 |        468        0.35       15.85
       1603 |        297        0.22       16.07
       1604 |        458        0.34       16.41
       1605 |        215        0.16       16.57
       1606 |        311        0.23       16.80
       1607 |        498        0.37       17.17
       1608 |        341        0.25       17.43
       1671 |        636        0.47       17.90
       1672 |        275        0.20       18.10
       1701 |        334        0.25       18.35
       1702 |        370        0.28       18.63
       1703 |        157        0.12       18.74
       1771 |        120        0.09       18.83
       1801 |        445        0.33       19.16
       1802 |        478        0.36       19.52
       1803 |        222        0.17       19.69
       1804 |        120        0.09       19.77
       1871 |        308        0.23       20.00
       3171 |      1,584        1.18       21.18
       3172 |      1,632        1.21       22.40
       3173 |      1,462        1.09       23.48
       3174 |      1,696        1.26       24.75
       3175 |        879        0.65       25.40
       3201 |        546        0.41       25.81
       3202 |        462        0.34       26.15
       3203 |        751        0.56       26.71
       3204 |        725        0.54       27.25
       3205 |        645        0.48       27.73
       3206 |        797        0.59       28.32
       3207 |        771        0.57       28.89
       3208 |        866        0.64       29.54
       3209 |        760        0.57       30.10
       3210 |        579        0.43       30.54
       3211 |        812        0.60       31.14
       3212 |        563        0.42       31.56
       3213 |        552        0.41       31.97
       3214 |        640        0.48       32.45
       3215 |        625        0.47       32.91
       3216 |        360        0.27       33.18
       3217 |        628        0.47       33.65
       3218 |        454        0.34       33.98
       3219 |        542        0.40       34.39
       3220 |        793        0.59       34.98
       3271 |        335        0.25       35.23
       3272 |        345        0.26       35.48
       3273 |        753        0.56       36.04
       3274 |        350        0.26       36.30
       3275 |        187        0.14       36.44
       3301 |        857        0.64       37.08
       3302 |        895        0.67       37.75
       3303 |        537        0.40       38.15
       3304 |        496        0.37       38.51
       3305 |        871        0.65       39.16
       3306 |        749        0.56       39.72
       3307 |        511        0.38       40.10
       3308 |        687        0.51       40.61
       3309 |        701        0.52       41.13
       3310 |        869        0.65       41.78
       3311 |        487        0.36       42.14
       3312 |        974        0.72       42.87
       3313 |        506        0.38       43.24
       3314 |        652        0.49       43.73
       3315 |        668        0.50       44.22
       3316 |        560        0.42       44.64
       3317 |        441        0.33       44.97
       3318 |        747        0.56       45.52
       3319 |        491        0.37       45.89
       3320 |        540        0.40       46.29
       3321 |        526        0.39       46.68
       3322 |        669        0.50       47.18
       3323 |        484        0.36       47.54
       3324 |        572        0.43       47.97
       3325 |        458        0.34       48.31
       3326 |        614        0.46       48.76
       3327 |        650        0.48       49.25
       3328 |        796        0.59       49.84
       3329 |        768        0.57       50.41
       3371 |        379        0.28       50.69
       3372 |        621        0.46       51.16
       3373 |        316        0.24       51.39
       3374 |        717        0.53       51.92
       3375 |        353        0.26       52.19
       3376 |        440        0.33       52.51
       3401 |        400        0.30       52.81
       3402 |        571        0.42       53.24
       3403 |        581        0.43       53.67
       3404 |        480        0.36       54.03
       3471 |        583        0.43       54.46
       3501 |        504        0.37       54.83
       3502 |        646        0.48       55.32
       3503 |        484        0.36       55.68
       3504 |        652        0.49       56.16
       3505 |        720        0.54       56.70
       3506 |        838        0.62       57.32
       3507 |        913        0.68       58.00
       3508 |        626        0.47       58.46
       3509 |        815        0.61       59.07
       3510 |        814        0.61       59.68
       3511 |        411        0.31       59.98
       3512 |        414        0.31       60.29
       3513 |        583        0.43       60.72
       3514 |        654        0.49       61.21
       3515 |        548        0.41       61.62
       3516 |        585        0.44       62.05
       3517 |        691        0.51       62.57
       3518 |        694        0.52       63.08
       3519 |        588        0.44       63.52
       3520 |        492        0.37       63.89
       3521 |        531        0.40       64.28
       3522 |        645        0.48       64.76
       3523 |        535        0.40       65.16
       3524 |        760        0.57       65.73
       3525 |        449        0.33       66.06
       3526 |        585        0.44       66.50
       3527 |        554        0.41       66.91
       3528 |        388        0.29       67.20
       3529 |        579        0.43       67.63
       3571 |        347        0.26       67.89
       3572 |        309        0.23       68.11
       3573 |        370        0.28       68.39
       3574 |        310        0.23       68.62
       3575 |        297        0.22       68.84
       3576 |        263        0.20       69.04
       3577 |        262        0.19       69.23
       3578 |        914        0.68       69.91
       5101 |        389        0.29       70.20
       5102 |        552        0.41       70.61
       5103 |        469        0.35       70.96
       5104 |        459        0.34       71.30
       5105 |        418        0.31       71.61
       5106 |        408        0.30       71.92
       5107 |        392        0.29       72.21
       5108 |        458        0.34       72.55
       5171 |        298        0.22       72.77
       5201 |        407        0.30       73.07
       5202 |        425        0.32       73.39
       5203 |        492        0.37       73.76
       5204 |        321        0.24       74.00
       5205 |        250        0.19       74.18
       5206 |        459        0.34       74.52
       5271 |        260        0.19       74.72
       5301 |        489        0.36       75.08
       5302 |        316        0.24       75.32
       5303 |        345        0.26       75.57
       5304 |        468        0.35       75.92
       5305 |        387        0.29       76.21
       5306 |        473        0.35       76.56
       5307 |        413        0.31       76.87
       5308 |        351        0.26       77.13
       5309 |        394        0.29       77.42
       5310 |        382        0.28       77.71
       5311 |        398        0.30       78.00
       5312 |        488        0.36       78.37
       6101 |        443        0.33       78.69
       6102 |        479        0.36       79.05
       6103 |        240        0.18       79.23
       6104 |        295        0.22       79.45
       6105 |        317        0.24       79.68
       6106 |        368        0.27       79.96
       6171 |        295        0.22       80.18
       6201 |        211        0.16       80.34
       6202 |        325        0.24       80.58
       6203 |        317        0.24       80.81
       6204 |        235        0.17       80.99
       6205 |        259        0.19       81.18
       6271 |         75        0.06       81.24
       6301 |        211        0.16       81.39
       6302 |        233        0.17       81.57
       6303 |        383        0.28       81.85
       6304 |        217        0.16       82.01
       6305 |        308        0.23       82.24
       6306 |        466        0.35       82.59
       6307 |        441        0.33       82.92
       6308 |        444        0.33       83.25
       6309 |        287        0.21       83.46
       6371 |        460        0.34       83.80
       6401 |        170        0.13       83.93
       6402 |        312        0.23       84.16
       6403 |        284        0.21       84.37
       6404 |        392        0.29       84.66
       6471 |        222        0.17       84.83
       6472 |        169        0.13       84.96
       7101 |        635        0.47       85.43
       7102 |        384        0.29       85.71
       7103 |        668        0.50       86.21
       7104 |        577        0.43       86.64
       7171 |        388        0.29       86.93
       7172 |        330        0.25       87.17
       7173 |        106        0.08       87.25
       7201 |        304        0.23       87.48
       7202 |        382        0.28       87.76
       7203 |        472        0.35       88.11
       7204 |        424        0.32       88.43
       7301 |        297        0.22       88.65
       7302 |        356        0.26       88.92
       7303 |        373        0.28       89.19
       7304 |        443        0.33       89.52
       7305 |        386        0.29       89.81
       7306 |        436        0.32       90.13
       7307 |        411        0.31       90.44
       7308 |        440        0.33       90.77
       7309 |        417        0.31       91.08
       7310 |        324        0.24       91.32
       7311 |        717        0.53       91.85
       7312 |        343        0.26       92.11
       7313 |        462        0.34       92.45
       7314 |        368        0.27       92.73
       7315 |        322        0.24       92.96
       7316 |        231        0.17       93.14
       7317 |        367        0.27       93.41
       7318 |        437        0.33       93.73
       7319 |        365        0.27       94.01
       7320 |        298        0.22       94.23
       7321 |        119        0.09       94.32
       7371 |        763        0.57       94.88
       7372 |        248        0.18       95.07
       7401 |        467        0.35       95.42
       7402 |        327        0.24       95.66
       7403 |        246        0.18       95.84
       7404 |        175        0.13       95.97
       8101 |        490        0.36       96.34
       8102 |        369        0.27       96.61
       8103 |        413        0.31       96.92
       8104 |        243        0.18       97.10
       8171 |        298        0.22       97.32
       8201 |        382        0.28       97.61
       8202 |        473        0.35       97.96
       8203 |        470        0.35       98.31
       8204 |        369        0.27       98.58
       8205 |        394        0.29       98.88
       8206 |        314        0.23       99.11
       8207 |        302        0.22       99.33
       8208 |        441        0.33       99.66
       8209 |        401        0.30       99.96
       8271 |         54        0.04      100.00
------------+-----------------------------------
      Total |    134,408      100.00

. tab p504thn, gen(year);

    year of |
      birth |      Freq.     Percent        Cum.
------------+-----------------------------------
         50 |      5,522        4.11        4.11
         51 |      3,449        2.57        6.67
         52 |      4,638        3.45       10.13
         53 |      5,109        3.80       13.93
         54 |      5,070        3.77       17.70
         55 |      6,709        4.99       22.69
         56 |      4,869        3.62       26.31
         57 |      5,511        4.10       30.41
         58 |      5,966        4.44       34.85
         59 |      5,925        4.41       39.26
         60 |      8,442        6.28       45.54
         61 |      4,839        3.60       49.14
         62 |      5,810        4.32       53.46
         63 |      6,457        4.80       58.27
         64 |      5,689        4.23       62.50
         65 |      8,523        6.34       68.84
         66 |      5,344        3.98       72.82
         67 |      5,972        4.44       77.26
         68 |      6,400        4.76       82.02
         69 |      6,254        4.65       86.67
         70 |      7,287        5.42       92.10
         71 |      5,055        3.76       95.86
         72 |      5,568        4.14      100.00
------------+-----------------------------------
      Total |    134,408      100.00

. tab dum, gen(dum);

    date of |
birth, 1961 |
to 1950=100 |      Freq.     Percent        Cum.
------------+-----------------------------------
         62 |      5,810        4.32        4.32
         63 |      6,457        4.80        9.13
         64 |      5,689        4.23       13.36
         65 |      8,523        6.34       19.70
         66 |      5,344        3.98       23.68
         67 |      5,972        4.44       28.12
         68 |      6,400        4.76       32.88
         69 |      6,254        4.65       37.53
         70 |      7,287        5.42       42.96
         71 |      5,055        3.76       46.72
         72 |      5,568        4.14       50.86
        100 |     66,049       49.14      100.00
------------+-----------------------------------
      Total |    134,408      100.00

. for X in var dum1-dum12 \ Y in any ndum1 ndum2 ndum3 ndum4 ndum5 ndum6 ndum7 ndum8 ndum9 ndum10 ndum11 ndum12:
> gen Y=X*nin;

->  gen ndum1=dum1*nin
(28 missing values generated)

->  gen ndum2=dum2*nin
(28 missing values generated)

->  gen ndum3=dum3*nin
(28 missing values generated)

->  gen ndum4=dum4*nin
(28 missing values generated)

->  gen ndum5=dum5*nin
(28 missing values generated)

->  gen ndum6=dum6*nin
(28 missing values generated)

->  gen ndum7=dum7*nin
(28 missing values generated)

->  gen ndum8=dum8*nin
(28 missing values generated)

->  gen ndum9=dum9*nin
(28 missing values generated)

->  gen ndum10=dum10*nin
(28 missing values generated)

->  gen ndum11=dum11*nin
(28 missing values generated)

->  gen ndum12=dum12*nin
(28 missing values generated)

. for X in var year1-year23 \ Y in any cYOB1 cYOB2 cYOB3 cYOB4 cYOB5 cYOB6 cYOB7
>  cYOB8 cYOB9 cYOB10 cYOB11 cYOB12 cYOB13 cYOB14  cYOB15 cYOB16 cYOB17 cYOB18 cYOB19 cYOB20 cYOB21 cYOB22 cYOB23:
> gen Y=X*ch71;

->  gen cYOB1=year1*ch71
(28 missing values generated)

->  gen cYOB2=year2*ch71
(28 missing values generated)

->  gen cYOB3=year3*ch71
(28 missing values generated)

->  gen cYOB4=year4*ch71
(28 missing values generated)

->  gen cYOB5=year5*ch71
(28 missing values generated)

->  gen cYOB6=year6*ch71
(28 missing values generated)

->  gen cYOB7=year7*ch71
(28 missing values generated)

->  gen cYOB8=year8*ch71
(28 missing values generated)

->  gen cYOB9=year9*ch71
(28 missing values generated)

->  gen cYOB10=year10*ch71
(28 missing values generated)

->  gen cYOB11=year11*ch71
(28 missing values generated)

->  gen cYOB12=year12*ch71
(28 missing values generated)

->  gen cYOB13=year13*ch71
(28 missing values generated)

->  gen cYOB14=year14*ch71
(28 missing values generated)

->  gen cYOB15=year15*ch71
(28 missing values generated)

->  gen cYOB16=year16*ch71
(28 missing values generated)

->  gen cYOB17=year17*ch71
(28 missing values generated)

->  gen cYOB18=year18*ch71
(28 missing values generated)

->  gen cYOB19=year19*ch71
(28 missing values generated)

->  gen cYOB20=year20*ch71
(28 missing values generated)

->  gen cYOB21=year21*ch71
(28 missing values generated)

->  gen cYOB22=year22*ch71
(28 missing values generated)

->  gen cYOB23=year23*ch71
(28 missing values generated)

. for Z in var year1-year23 \ Y in any eYOB1 eYOB2 eYOB3 eYOB4 eYOB5 eYOB6 eYOB7
>  eYOB8 eYOB9 eYOB10 eYOB11 eYOB12 eYOB13 eYOB14  eYOB15 eYOB16 eYOB17 eYOB18 eYOB19 eYOB20 eYOB21 eYOB22 eYOB23:
> gen Y = Z*en71;

->  gen eYOB1 = year1*en71
(484 missing values generated)

->  gen eYOB2 = year2*en71
(484 missing values generated)

->  gen eYOB3 = year3*en71
(484 missing values generated)

->  gen eYOB4 = year4*en71
(484 missing values generated)

->  gen eYOB5 = year5*en71
(484 missing values generated)

->  gen eYOB6 = year6*en71
(484 missing values generated)

->  gen eYOB7 = year7*en71
(484 missing values generated)

->  gen eYOB8 = year8*en71
(484 missing values generated)

->  gen eYOB9 = year9*en71
(484 missing values generated)

->  gen eYOB10 = year10*en71
(484 missing values generated)

->  gen eYOB11 = year11*en71
(484 missing values generated)

->  gen eYOB12 = year12*en71
(484 missing values generated)

->  gen eYOB13 = year13*en71
(484 missing values generated)

->  gen eYOB14 = year14*en71
(484 missing values generated)

->  gen eYOB15 = year15*en71
(484 missing values generated)

->  gen eYOB16 = year16*en71
(484 missing values generated)

->  gen eYOB17 = year17*en71
(484 missing values generated)

->  gen eYOB18 = year18*en71
(484 missing values generated)

->  gen eYOB19 = year19*en71
(484 missing values generated)

->  gen eYOB20 = year20*en71
(484 missing values generated)

->  gen eYOB21 = year21*en71
(484 missing values generated)

->  gen eYOB22 = year22*en71
(484 missing values generated)

->  gen eYOB23 = year23*en71
(484 missing values generated)

. for X in var year1-year23 \ Y in any wYOB1 wYOB2 wYOB3 wYOB4 wYOB5 wYOB6 wYOB7
>  wYOB8 wYOB9 wYOB10 wYOB11 wYOB12 wYOB13 wYOB14  wYOB15 wYOB16 wYOB17 wYOB18 wYOB19 wYOB20 wYOB21 wYOB22 wYOB23:
> gen Y=X*wsppc;

->  gen wYOB1=year1*wsppc
(7,663 missing values generated)

->  gen wYOB2=year2*wsppc
(7,663 missing values generated)

->  gen wYOB3=year3*wsppc
(7,663 missing values generated)

->  gen wYOB4=year4*wsppc
(7,663 missing values generated)

->  gen wYOB5=year5*wsppc
(7,663 missing values generated)

->  gen wYOB6=year6*wsppc
(7,663 missing values generated)

->  gen wYOB7=year7*wsppc
(7,663 missing values generated)

->  gen wYOB8=year8*wsppc
(7,663 missing values generated)

->  gen wYOB9=year9*wsppc
(7,663 missing values generated)

->  gen wYOB10=year10*wsppc
(7,663 missing values generated)

->  gen wYOB11=year11*wsppc
(7,663 missing values generated)

->  gen wYOB12=year12*wsppc
(7,663 missing values generated)

->  gen wYOB13=year13*wsppc
(7,663 missing values generated)

->  gen wYOB14=year14*wsppc
(7,663 missing values generated)

->  gen wYOB15=year15*wsppc
(7,663 missing values generated)

->  gen wYOB16=year16*wsppc
(7,663 missing values generated)

->  gen wYOB17=year17*wsppc
(7,663 missing values generated)

->  gen wYOB18=year18*wsppc
(7,663 missing values generated)

->  gen wYOB19=year19*wsppc
(7,663 missing values generated)

->  gen wYOB20=year20*wsppc
(7,663 missing values generated)

->  gen wYOB21=year21*wsppc
(7,663 missing values generated)

->  gen wYOB22=year22*wsppc
(7,663 missing values generated)

->  gen wYOB23=year23*wsppc
(7,663 missing values generated)

. quietly anova lwinp yeduc p504thn birthpl ch71, cont(ch71 yeduc) ;

. display "coeff X= " _b[yeduc];
coeff X= .0442886

. display "se X= " _se[yeduc];
se X= .00036479

. quietly anova lwinp yeduc p504thn birthpl ch71 en71, cont(ch71 en71 yeduc) ;

. display "coeff X= " _b[yeduc];
coeff X= .04429081

. display "se X= " _se[yeduc];
se X= .00036543

. quietly anova lwinp yeduc p504thn birthpl ch71 en71 wsppc, cont(ch71 en71 wsppc yeduc);

. display "coeff X= " _b[yeduc];
coeff X= .04407026

. display "se X= " _se[yeduc];
se X= .00037474

. quietly reg lwinp yeduc year1-year23 ROB1-ROB290 cYOB1-cYOB23 (year1-year23 ROB1-ROB290 cYOB1-cYOB23
> ndum1 ndum2 ndum3 ndum4 ndum5 ndum6 ndum7 ndum8 ndum9 ndum10 ndum11 ndum12);

. display "coeff X= " _b[yeduc];
coeff X= .04010782

. display "se X= " _se[yeduc];
se X= .01613805

. quietly reg lwinp yeduc year1-year23 ROB1-ROB290 cYOB1-cYOB23 eYOB1-eYOB23 (year1-year23 ROB1-ROB290 cYOB1-cYOB23
> ndum1 ndum2 ndum3 ndum4 ndum5 ndum6 ndum7 ndum8 ndum9 ndum10 ndum11 ndum12 eYOB1-eYOB23);

. display "coeff X= " _b[yeduc];
coeff X= .06705619

. display "se X= " _se[yeduc];
se X= .01398813

. quietly reg lwinp yeduc year1-year23 ROB1-ROB290 cYOB1-cYOB23 eYOB1-eYOB23 wYOB1-wYOB23 (year1-year23 ROB1-ROB290 cYOB1-cYOB23
> ndum1 ndum2 ndum3 ndum4 ndum5 ndum6 ndum7 ndum8 ndum9 ndum10 ndum11 ndum12 eYOB1-eYOB23 wYOB1-wYOB23);

. display "coeff X= " _b[yeduc];
coeff X= .01783545

. display "se X= " _se[yeduc];
se X= .01425489

. 
end of do-file

. 
end of do-file

. do "C:\Users\Nathan\AppData\Local\Temp\STD7e10_000000.tmp"

. # delimit ;
delimiter now ;
. *use supa2,clear;
. use inpresdata,clear;

. cap log close;
